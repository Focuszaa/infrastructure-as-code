AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for priodically build base image

Parameters:
  ECR1StRepoName:
    Description: ECR Repository name for 1st
    Type: String
    Default: "1st/base"
  ECR2ndRepoName:
    Description: ECR Repository name for 2nd
    Type: String
    Default: "2nd/base"
  1stImageTag:
    Description: Image tag for 1st
    Type: String
    Default: tf-cpu-base-test
  2ndImageTag:
    Description: Image tag for 2nd
    Type: String
    Default: baseimage-test
  1stBuildspec:
    Description: Image tag for 2nd
    Type: String
    Default: 1st.buildspec.yaml
  2ndBuildspec:
    Description: Image tag for 2nd
    Type: String
    Default: 2nd.buildspec.yaml
  AwsAccountID:
    Description: AWS Account ID
    Type: String
    Default: '{{resolve:ssm:AwaAccountID}}'
  S3ArtifactStore:
    Description: S3 location to storing artifact
    Type: String
    Default: assetfiles

Resources: 
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DeletionPolicy: Delete
    Properties:
      Name: 1stBaseImage
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: us-east-1
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AwsAccountID
          - Name: IMAGE_REPO_NAME
            Value: !Ref ECR1StRepoName
          - Name: IMAGE_TAG
            Value: !Ref 1stImageTag
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref 1stBuildspec

  CodeBuildSeconds:
    Type: AWS::CodeBuild::Project
    DeletionPolicy: Delete
    Properties:
      Name: 2ndBaseImage
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: us-east-1
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AwsAccountID
          - Name: IMAGE_REPO_NAME
            Value: !Ref ECR2ndRepoName
          - Name: IMAGE_TAG
            Value: !Ref 2ndImageTag
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref 2ndBuildspec

# https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DeletionPolicy: Delete
    Properties: 
      Name: BaseImageBuilder
      ArtifactStore: 
        Type: S3
        Location: !Ref S3ArtifactStore
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceBaseImage
              Configuration:
                BranchName: main
                RepositoryName: BaseImageBuilder
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildBaseImage1st
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceBaseImage
            - Name: BuildBaseImage2nd
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                ProjectName: !Ref CodeBuildSeconds
              InputArtifacts:
                - Name: SourceBaseImage

  CodeCommitEventRule:
    Type: AWS::Events::Rule
    DeletionPolicy: Delete
    Properties:
      Name: "EventOnCodeCommit"
      Description: "Start trigger when there is a change on main branch"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources: 
          - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', 'BaseImageBuilder' ] ]
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
      Targets:
        -
          Arn: 
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', 'BaseImageBuilder' ] ]
          RoleArn: !GetAtt CloudWatchEventRole.Arn
          Id: BaseImageBuilder

  EventSchedule:
    Type: AWS::Events::Rule
    DeletionPolicy: Delete
    Properties:
      Name: "WeeklyEventSchedule"
      Description: "Build once a week on Monday random time ~ 7-10 "
      ScheduleExpression: "cron(0 3 ? * 1 *)"
      Targets:
        -
          Arn: 
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', 'BaseImageBuilder' ] ]
          RoleArn: !GetAtt CloudWatchEventRole.Arn
          Id: BaseImageBuilder

  CloudWatchEventRole:
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Delete
    Properties:
      Description: "Cloudwatch event service role for trigger codepipeline "
      AssumeRolePolicyDocument: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      Path: "/"
      RoleName: "cloudwatch-event-service-role"
      Policies:
        - PolicyName: codebuild-service-role-policy
          PolicyDocument: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Sid": "VisualEditor0",
                      "Effect": "Allow",
                      "Action": "codepipeline:StartPipelineExecution",
                      "Resource": "arn:aws:codepipeline:us-east-1:{{ !Ref AwsAccountID }}:BaseImageBuilder"
                  }
              ]
            }
      Tags:
        - Key: "env"
          Value: "learning"

  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Delete
    Properties:
      Description: "codebuild service role"
      AssumeRolePolicyDocument: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      Path: "/"
      RoleName: "codebuild-service-role"
      Policies:
        - PolicyName: codebuild-service-role-policy
          PolicyDocument: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "CloudWatchLogsPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "codebuildPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "codebuild:GitPull"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "S3GetObjectPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectVersion"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "S3PutObjectPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "S3BucketIdentity",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetBucketAcl",
                    "s3:GetBucketLocation"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "VisualEditor0",
                  "Effect": "Allow",
                  "Action": [
                      "ecr:GetDownloadUrlForLayer",
                      "ecr:BatchGetImage",
                      "ecr:CompleteLayerUpload",
                      "ecr:GetAuthorizationToken",
                      "ecr:UploadLayerPart",
                      "ecr:InitiateLayerUpload",
                      "ecr:BatchCheckLayerAvailability",
                      "ecr:PutImage"
                  ],
                  "Resource": "*"
                }
              ]
            }
      Tags:
        - Key: "env"
          Value: "learning"

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Delete
    Properties:
      Description: "CodePipeline service role"
      AssumeRolePolicyDocument: |
        {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Principal": {
                      "Service": "codepipeline.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
              }
          ]
        }
      Path: "/"
      RoleName: "code-pipeline-service-role"
      Policies:
        - PolicyName: code-pipeline-service-role-policy
          PolicyDocument: |
            {
              "Statement": [
                  {
                      "Action": [
                          "iam:PassRole"
                      ],
                      "Resource": "*",
                      "Effect": "Allow",
                      "Condition": {
                          "StringEqualsIfExists": {
                              "iam:PassedToService": [
                                  "cloudformation.amazonaws.com"
                              ]
                          }
                      }
                  },
                  {
                      "Action": [
                          "codecommit:CancelUploadArchive",
                          "codecommit:GetBranch",
                          "codecommit:GetCommit",
                          "codecommit:GetRepository",
                          "codecommit:GetUploadArchiveStatus",
                          "codecommit:UploadArchive"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "codestar-connections:UseConnection"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Action": [
                          "cloudwatch:*",
                          "s3:*",
                          "sns:*",
                          "cloudformation:*"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Sid": "CodeStarNotificationsReadWriteAccess",
                      "Effect": "Allow",
                      "Action": [
                          "codestar-notifications:CreateNotificationRule",
                          "codestar-notifications:DescribeNotificationRule",
                          "codestar-notifications:UpdateNotificationRule",
                          "codestar-notifications:DeleteNotificationRule",
                          "codestar-notifications:Subscribe",
                          "codestar-notifications:Unsubscribe"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Sid": "CodeStarNotificationsListAccess",
                      "Effect": "Allow",
                      "Action": [
                          "codestar-notifications:ListNotificationRules",
                          "codestar-notifications:ListTargets",
                          "codestar-notifications:ListTagsforResource",
                          "codestar-notifications:ListEventTypes"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Action": [
                          "codebuild:BatchGetBuilds",
                          "codebuild:StartBuild",
                          "codebuild:BatchGetBuildBatches",
                          "codebuild:StartBuildBatch"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "ecr:DescribeImages"
                      ],
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "states:DescribeExecution",
                          "states:DescribeStateMachine",
                          "states:StartExecution"
                      ],
                      "Resource": "*"
                  }
              ],
              "Version": "2012-10-17"
            }
      Tags:
        - Key: "env"
          Value: "learning"

  # https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#events-ref-pipeline
  NotificationCodePipeline:
    Type: 'AWS::CodeStarNotifications::NotificationRule'
    DeletionPolicy: Delete
    Properties:
      Name: 'Notification Rule for stages result'
      DetailType: FULL
      Resource:
        !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', 'BaseImageBuilder' ] ]
      EventTypeIds: 
          - codepipeline-pipeline-pipeline-execution-failed
          - codepipeline-pipeline-pipeline-execution-succeeded
      Targets: 
          - TargetType: SNS 
            TargetAddress: 
              !Join [ '', [ 'arn:aws:sns:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', 'CodePipelineSNS' ] ]
      Tags: 
            env: learning

  CodePipleineSNSPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties: 
      # PolicyDocument:
      #   Version: "2012-10-17"
      #   Statement:
      #     - Effect: Allow
      #       Action:
      #         - 'SNS:Publish'
      #       Principal:
      #         - "Service": "codestar-notifications.amazonaws.com"
      #       Resource:
      #         !Join [ '', [ 'arn:aws:sns:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', 'CodePipelineSNS' ] ]
      PolicyDocument: |
        {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "CodeNotification_publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "codestar-notifications.amazonaws.com"
              },
              "Action": "SNS:Publish",
              "Resource": "arn:aws:sns:us-east-1:{{ !Ref AwsAccountID }}:CodePipelineSNS"
            }
          ]
        }
      Topics: 
        - !Ref CodePipelineSNS

  CodePipelineSNS:
    Type: AWS::SNS::Topic
    DeletionPolicy: Delete
    Properties:
      DisplayName: "CodePipelineSNS"
      Subscription:
        - Endpoint: focuszaaphoto@gmail.com
          Protocol: "email"
      TopicName: "CodePipelineSNS"

# Outputs:
#   BackupLoadBalancerDNSName:
#     Description: The DNSName of the backup load balancer
#     Value: !GetAtt BackupLoadBalancer.DNSName
#     Condition: CreateProdResources
#   InstanceID:
#     Description: The Instance ID
#     Value: !Ref EC2Instance
